# Defines a default set of lint rules enforced for
# projects at Google. For details and rationale,
# see https://github.com/dart-lang/pedantic#enabled-lints.
include: package:lints/recommended.yaml

# Until there are meta linter rules, each desired lint must be explicitly enabled.
# See: https://github.com/dart-lang/linter/issues/288
#
# For a list of lints, see: http://dart-lang.github.io/linter/lints/
# See the configuration guide for more
# https://github.com/dart-lang/sdk/tree/master/pkg/analyzer#configuring-the-analyzer
#
# NOTE: Please keep this file in sync with
# https://github.com/flutter/flutter/blob/master/analysis_options.yaml

analyzer:
  # Strong mode is sometimes harder to keep
  language:
    strict-casts: true

  # Always include any folder name build
  exclude:
    - build/**

  errors:
    # treat missing required parameters as a warning (not a hint)
    missing_required_param: warning
    # allow having TODOs in the code
    todo: ignore
    # Ignore errors like
    # 'super_goes_last' is a deprecated lint rule and should not be used â€¢ included_file_warning
    included_file_warning: ignore

linter:
  rules:
    - always_declare_return_types
    - avoid_dynamic_calls
    - avoid_slow_async_io
    - cancel_subscriptions
    - deprecated_member_use_from_same_package
    - directives_ordering
    - implicit_reopen
    - invalid_case_patterns
    - invalid_runtime_check_with_js_interop_types
    - iterable_contains_unrelated_type
    - list_remove_unrelated_type
    - no_adjacent_strings_in_list
    - no_literal_bool_comparisons
    - no_self_assignments
    - omit_local_variable_types
    - package_api_docs
    - package_prefixed_library_names
    - prefer_if_elements_to_conditional_expressions
    - prefer_single_quotes
    - sort_child_properties_last
    - test_types_in_equals
    - throw_in_finally
    - unawaited_futures
    - unnecessary_statements
    - unsafe_html
